{"ast":null,"code":"var _jsxFileName = \"D:\\\\SmartMoneyAppFront\\\\frontend\\\\src\\\\components\\\\auth\\\\theme\\\\colorModeSelect.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useColorScheme } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ColorModeSelect(props) {\n  _s();\n  const {\n    mode,\n    setMode\n  } = useColorScheme();\n  if (!mode) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Select, {\n    value: mode,\n    onChange: event => setMode(event.target.value),\n    SelectDisplayProps: {\n      // @ts-ignore\n      'data-screenshot': 'toggle-mode'\n    },\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"system\",\n      children: \"System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"light\",\n      children: \"Light\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"dark\",\n      children: \"Dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(ColorModeSelect, \"/A8s72i832WMziaeP3kNeGioZXs=\", false, function () {\n  return [useColorScheme];\n});\n_c = ColorModeSelect;\nvar _c;\n$RefreshReg$(_c, \"ColorModeSelect\");","map":{"version":3,"names":["React","useColorScheme","MenuItem","Select","jsxDEV","_jsxDEV","ColorModeSelect","props","_s","mode","setMode","value","onChange","event","target","SelectDisplayProps","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SmartMoneyAppFront/frontend/src/components/auth/theme/colorModeSelect.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { useColorScheme } from '@mui/material/styles';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select, { SelectProps } from '@mui/material/Select';\r\n\r\nexport default function ColorModeSelect(props: SelectProps) {\r\n  const { mode, setMode } = useColorScheme();\r\n  if (!mode) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Select\r\n      value={mode}\r\n      onChange={(event) =>\r\n        setMode(event.target.value as 'system' | 'light' | 'dark')\r\n      }\r\n      SelectDisplayProps={{\r\n        // @ts-ignore\r\n        'data-screenshot': 'toggle-mode',\r\n      }}\r\n      {...props}\r\n    >\r\n      <MenuItem value=\"system\">System</MenuItem>\r\n      <MenuItem value=\"light\">Light</MenuItem>\r\n      <MenuItem value=\"dark\">Dark</MenuItem>\r\n    </Select>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,cAAc,QAAQ,sBAAsB;AACrD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,MAAM,MAAuB,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,eAAe,SAASC,eAAeA,CAACC,KAAkB,EAAE;EAAAC,EAAA;EAC1D,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGT,cAAc,CAAC,CAAC;EAC1C,IAAI,CAACQ,IAAI,EAAE;IACT,OAAO,IAAI;EACb;EACA,oBACEJ,OAAA,CAACF,MAAM;IACLQ,KAAK,EAAEF,IAAK;IACZG,QAAQ,EAAGC,KAAK,IACdH,OAAO,CAACG,KAAK,CAACC,MAAM,CAACH,KAAoC,CAC1D;IACDI,kBAAkB,EAAE;MAClB;MACA,iBAAiB,EAAE;IACrB,CAAE;IAAA,GACER,KAAK;IAAAS,QAAA,gBAETX,OAAA,CAACH,QAAQ;MAACS,KAAK,EAAC,QAAQ;MAAAK,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eAC1Cf,OAAA,CAACH,QAAQ;MAACS,KAAK,EAAC,OAAO;MAAAK,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACxCf,OAAA,CAACH,QAAQ;MAACS,KAAK,EAAC,MAAM;MAAAK,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEb;AAACZ,EAAA,CAtBuBF,eAAe;EAAA,QACXL,cAAc;AAAA;AAAAoB,EAAA,GADlBf,eAAe;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}